<project name="Deploy" default="fulldeploy" basedir=".">
  <property file="deployContent.properties"/>
  <!-- Must pass in these values for the deploy to run. -->
  <property name="version" value=""/>
  <property name="target-servername" value=""/>
  <property name="env" value=""/>
  <property name="release.nas.user" value="ECOMQC\svcTFSNGService"/>
  <property name="release.nas.password" value="Ac*r0s$4"/>
  <property name="release-nas" value="\\cobaltreleaseqc.int.westgroup.com\cobaltreleaseqc$"/>
  <property name="vertical-name" value="ebookStatic"/>
  <property name="target.server.user" value="asadmin"/>
  <property name="target.server.password" value="east"/>
  <property name="release-nas-servername" value="cobaltreleaseqc.int.westgroup.com"/>
  <property name ="target-folder" value ="/apps/eBookBuilder/staticContent"/>
  <property name ="tarfile" value="ebookStatic.tar"/>
  <property name="server_response_file" value="DeployUpdateLog.xml"/>
  <property name="server_update_response_file" value="DeployUpdateStatusLog.xml"/>
  <property name="deploy.status" value="FAILED"/>
  <property name="application" value="ebookStatic"/>

  <!-- This does all the work for deployment. -->
  <target name="fulldeploy" description="this does the full deploy of the vertical">
    <!--Update deployment database info-->
    <!-- No longer updating DID
    <antcall target="UpdateInfo"/>-->
    <antcall target="connect"/>
    <antcall target="cleanup"/>
    <antcall target="copy env"/>
    <antcall target="disconnect"/>
    <!--Unzip Tar file-->
    <sshexec host="${target-servername}"
    username="${target.server.user}"
    password="${target.server.password}"
    trust="yes"
    command="cd ${target-folder}; tar --no-overwrite-dir -xvpf ${tarfile}"/>
    <!--Delete the tar file-->
    <sshexec host="${target-servername}"
    username="${target.server.user}"
    password="${target.server.password}"
    trust="yes"
    command="cd ${target-folder}; rm *.tar"/>
    <!--Update deployment database info-->
    <!-- No longer updating DID
    <antcall target="UpdateStatus">
      <param name="deploy.status" value="SUCCESSFUL"/>
    </antcall>-->
  </target>

  <!-- copy over the files -->
  <target name="copy env">
    <scp todir="${target.server.user}:${target.server.password}@${target-servername}:${target-folder}" trust="yes" verbose="true">
      <fileset dir="${release-nas}\${vertical-name}\${version}">
        <include name="${tarfile}"/>
      </fileset>
    </scp>
  </target>


  <!-- connect to the machine -->
  <target name="connect">
    <exec executable="net">
      <arg value="use"/>
      <arg value="\\${release-nas-servername}"/>
      <arg value="/USER:${release.nas.user}"/>
      <arg value="${release.nas.password}"/>
    </exec>
  </target>

  <!-- disconnect from the machine -->
  <target name="disconnect">
    <exec executable="net">
      <arg value="use"/>
      <arg value="\\${release-nas-servername}"/>
      <arg value="/DELETE"/>
    </exec>
  </target>

  <!-- Delete old files before deploying the new static content-->
  <target name="cleanup">
    <sshexec host="${target-servername}"
      username="${target.server.user}"
      password="${target.server.password}"
      trust="yes"
      command="cd ${target-folder}; rm -rf *"/>
  </target>
    <!-- ================================================================== 
          target: UpdateStatus
          description: Update the deployment database (using the asp.net page interface).
                       By default the status is set to "Failed".  
       ================================================================== -->
  <target name="UpdateInfo" description="This target will update the deployment database before the deployment is started.">
    <get src="http://eg-ngtfs-02:8080/DID/deployed.aspx?action=update&amp;environment=${env}&amp;vertical=${application}&amp;version=${version}" dest="${server_response_file}" />
    <!-- Determine if the database update was sucessful -->
    <xmlproperty file="${server_response_file}" collapseattributes="true"/>
    <fail>
      <condition>
        <and>
          <isset property="ERROR"/>
        </and>
      </condition>Unable to update the database with the deployment information.
      Error: ${ERROR}
      Refer to the file '${server_response_file}' for more information on the error.
    </fail>
  </target>

  <!-- ==================================================================
          target: UpdateStatus              
          description: Update the deployment database with the status of the deployment.
       ================================================================== -->
  <target name="UpdateStatus" description="Update the deployment database with the status of the build (after deployment)">
    <!-- Retain the corresponding build in TFS -->
    <echo level="info" message="Attempting to retain version '${version}' of the TFS build for application '${application}'"/>
    <exec executable="Retain_TFS_Build\RetainTFSBuild.exe" dir="Retain_TFS_Build" failonerror="true">
      <arg value="${application}"/>
      <arg value="${version}"/>
    </exec>

    <!-- Parse the log file created by the targets file above (i.e., "updateInfo") -->
    <xmlproperty file="${server_response_file}" collapseattributes="true"/>
    <fail>
      <condition>
        <not>
          <and>
            <isset property="DocumentElement.DeployedHistory.DHID"/>
          </and>
        </not>
      </condition>Cannot find the DHID tag (in file '${server_response_file}') to update the status of the deployment.
    </fail>
    <get src="http://eg-ngtfs-02:8080/DID/deployed.aspx?action=update&amp;dhid=${DocumentElement.DeployedHistory.DHID}&amp;status=${deploy.status}" dest="${server_update_response_file}" />
  </target>
</project>