<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:oxm="http://www.springframework.org/schema/oxm"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                           http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           ">
    
    <bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <constructor-arg value="vm://localhost?broker.persistent=false"/>
    </bean>
          
    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <constructor-arg ref="activeMQConnectionFactory"/>
    </bean>
    
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate" 
            p:defaultDestinationName="TEST.QUEUE">
        <constructor-arg ref="pooledConnectionFactory"/>
    </bean>
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
        <property name="url"
            value="jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=c540wfyctdbqf.int.thomsonreuters.com)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=ebook_dev.int.thomsonreuters.com)))" />
        <property name="username" value="EBOOK_USER" />
        <property name="password" value="eb00k" />
        <property name="initialSize" value="3" />
        <property name="maxActive" value="8" />
    </bean>
    
    <bean id="closeableAuthenticationHttpClientFactory" class="com.thomsonreuters.uscl.ereader.deliver.rest.CloseableAuthenticationHttpClientFactory">
        <constructor-arg value="${proview.host}"/>
        <constructor-arg type="java.lang.String" value="${proview.username}"/>
        <constructor-arg type="java.lang.String" value="${proview.password}"/>
    </bean>
    
    <bean id="proviewRequestCallbackFactory" class="com.thomsonreuters.uscl.ereader.deliver.rest.ProviewRequestCallbackFactory"/>
    
    <bean id="proviewClient" class="com.thomsonreuters.uscl.ereader.deliver.service.ProviewClientImpl"
          p:proviewHostname="${proview.host}"
          p:getTitlesUriTemplate="http://{proviewHost}/v1/titles/"
          p:singleTitleTemplate="http://{proviewHost}/v1/titles/{titleId}"
          p:publishTitleUriTemplate="http://{proviewHost}/v1/title/{titleId}/{eBookVersionNumber}"
          p:removeTitleUriTemplate="http://{proviewHost}/v1/title/{titleId}/{eBookVersionNumber}/status/removed"
          p:promoteTitleUriTemplate="http://{proviewHost}/v1/title/{titleId}/{eBookVersionNumber}/status/final"
          p:deleteTitleUriTemplate="http://{proviewHost}/v1/title/{titleId}/{eBookVersionNumber}"
          p:restTemplate-ref="proviewRestTemplate"
          p:proviewRequestCallbackFactory-ref="proviewRequestCallbackFactory"
          p:proviewResponseExtractorFactory-ref="proviewResponseExtractorFactory"
          p:createGroupUriTemplate="http://{proviewHost}/v1/group/{groupId}/{groupVersionNumber}"
          p:removeGroupStatusUriTemplate="http://{proviewHost}/v1/group/{groupId}/{groupVersionNumber}/status/removed"
          p:promoteGroupStatusUriTemplate="http://{proviewHost}/v1/group/{groupId}/{groupVersionNumber}/status/final"
          p:getGroupUriTemplate="http://{proviewHost}/v1/group/{groupId}/{groupVersionNumber}/info"
          p:allGroupsUriTemplate="http://{proviewHost}/v1/group/"
          p:singleGroupUriTemplate="http://{proviewHost}/v1/group/{groupId}"
          p:deleteGroupUriTemplate="http://{proviewHost}/v1/group/{groupId}/{groupVersionNumber}"
          p:singleTitleByVersionUriTemplate="http://{proviewHost}/v1/titles/{titleId}/{eBookVersionNumber}"/>
          
    <bean id="proviewResponseExtractorFactory" class="com.thomsonreuters.uscl.ereader.deliver.rest.ProviewResponseExtractorFactory"/>
    
    <bean id="proviewRestTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg>
            <bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory" 
                    p:bufferRequestBody="false"
                    p:httpClient-ref="closeableAuthenticationHttpClient"
                />
        </constructor-arg>
        <property name="messageConverters">
            <list>
                <bean class="com.thomsonreuters.uscl.ereader.deliver.rest.ProviewMessageConverter"/>
            </list>
        </property>
        <property name="errorHandler">
            <bean class="com.thomsonreuters.uscl.ereader.deliver.rest.ProviewHttpResponseErrorHandler"/>
        </property>
    </bean>
    <bean id="closeableAuthenticationHttpClient" factory-bean="closeableAuthenticationHttpClientFactory" factory-method="getCloseableAuthenticationHttpClient"/>
    
    <bean id="appConfigService" class="com.thomsonreuters.uscl.ereader.core.job.service.AppConfigServiceImpl"
          p:appParameterDao-ref="appParameterDao"
          p:defaultProviewHostname="${proview.host}"
          p:defaultNovusEnvironment="${novus.environment}"/>
    
        <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
          <props>
            <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            <prop key="hibernate.show_sql">${hibernate.show.sql}</prop>
            <prop key="hibernate.cache.provider_class">${hibernate.cache.provider.class}</prop>
          </props>
        </property>
        <property name="annotatedClasses">
          <list>
            <value>com.thomsonreuters.uscl.ereader.request.EBookRequest</value>
          </list>
        </property>
    </bean>
    
    <bean id="simpleResponseMessageConverter"
        class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
        <property name="marshaller" ref="simpleResponseMarshaller" />
        <property name="unmarshaller" ref="simpleResponseMarshaller" />
    </bean>
    
    <oxm:jaxb2-marshaller id="simpleResponseMarshaller">
        <oxm:class-to-be-bound name="com.thomsonreuters.uscl.ereader.core.job.domain.SimpleRestServiceResponse"/>
    </oxm:jaxb2-marshaller>
    
    <oxm:jaxb2-marshaller id="miscConfigMarshaller">
        <oxm:class-to-be-bound name="com.thomsonreuters.uscl.ereader.core.job.domain.MiscConfig"/>
    </oxm:jaxb2-marshaller>
    
    <oxm:jaxb2-marshaller id="jobThrottleConfigMarshaller">
        <oxm:class-to-be-bound name="com.thomsonreuters.uscl.ereader.core.job.domain.JobThrottleConfig"/>
    </oxm:jaxb2-marshaller>
    
    <bean id="createFrontMatterService" class="com.thomsonreuters.uscl.ereader.frontmatter.service.CreateFrontMatterServiceImpl">
          <property name="frontMatterTitlePageTemplate" value="classpath:templates/frontMatterTitleTemplate.xml"/>
          <property name="frontMatterCopyrightPageTemplate" value="classpath:templates/frontMatterCopyrightTemplate.xml"/>
          <property name="frontMatterAdditionalPagesTemplate" value="classpath:templates/frontMatterAdditionalPagesTemplate.xml"/>
          <property name="frontMatterResearchAssistancePageTemplate" value="classpath:templates/frontMatterResearchAssistanceTemplate.xml"/>
          <property name="frontMatterWestlawNextPageTemplate" value="classpath:templates/frontMatterWestlawNextTemplate.xml"/>
          <property name="frontMatterLogoPlaceHolder">
            <map>
                <entry key="er:#EBook_Generator_TRLogo" value="EBook_Generator_TRLogo.png"/>
                <entry key="er:#AAJ_PRESS" value="AAJ_PRESS.png"/>
            </map>
          </property>
    </bean>
    
    <bean id="proviewHandler" class="com.thomsonreuters.uscl.ereader.deliver.service.ProviewHandlerImpl"
          p:proviewClient-ref="proviewClient"/>
          
    <bean id="groupService" class="com.thomsonreuters.uscl.ereader.group.service.GroupServiceImpl"
            p:proviewHandler-ref="proviewHandler"/>
    <bean id="jobNameProvider" class="com.thomsonreuters.uscl.ereader.core.job.service.JobNameProviderImpl"/>
  
    <bean id="jobRequestService" class="com.thomsonreuters.uscl.ereader.core.job.service.JobRequestServiceImpl"
          p:jobRequestDao-ref="jobRequestDao"/>
          
    <bean id="jobRequestDao" class="com.thomsonreuters.uscl.ereader.core.job.dao.JobRequestDaoImpl">
        <constructor-arg ref="sessionFactory" />
    </bean>
    
    <bean id="jmsClient" class="com.thomsonreuters.uscl.ereader.jms.client.impl.JmsClientImpl"/>
    
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>

    <!-- Enable the configuration of transactional behavior based on @Transactional 
        annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>
