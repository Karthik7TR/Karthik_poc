<!-- 
	Copyright 2011: Thomson Reuters Global Resources. All Rights Reserved.
	Proprietary and Confidential information of TRGR. Disclosure, Use or
	Reproduction without the written authorization of TRGR is prohibited
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 	 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
           ">      

	<!-- Message converters and singleton REST template for interacting with the RESTful web services -->
	<bean id="jsonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper"/>
	<bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"
		  p:objectMapper-ref="jsonObjectMapper"/>
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
      <property name="messageConverters">
        <list>
          <ref bean="jsonHttpMessageConverter"/>
        </list>
      </property>
	</bean>
	
  	<bean id="coreService" class="com.thomsonreuters.uscl.ereader.orchestrate.core.service.CoreServiceImpl"
  		  p:coreDao-ref="coreDao"/>

	<bean id="engineService" class="com.thomsonreuters.uscl.ereader.orchestrate.engine.service.EngineServiceImpl"
		  p:jobRegistry-ref="jobRegistry"
		  p:jobOperator-ref="jobOperator"
		  p:jobLauncher-ref="jobLauncher"/>
		  
	<bean id="docMetadataService" class="com.thomsonreuters.uscl.ereader.gather.metadata.service.DocMetadataServiceImpl"/>
	<bean id="xsltMapperService" class="com.thomsonreuters.uscl.ereader.format.service.XSLTMapperServiceImpl"
		  p:xsltMapperDao-ref="xsltMapperDao"/>
		  
	<bean id="xmlFilter" class="com.thomsonreuters.uscl.ereader.ioutil.FileExtensionFilter">
  	  <property name="acceptedFileExtensions">
        <list>
          <value>.xml</value>
        </list>
      </property>
    </bean>
    <bean id="xmlFileHandlingHelper" class="com.thomsonreuters.uscl.ereader.ioutil.FileHandlingHelper"
		  p:filter-ref="xmlFilter"/>
		  
	<bean id="transformedFileFilter" class="com.thomsonreuters.uscl.ereader.ioutil.FileExtensionFilter">
  	  <property name="acceptedFileExtensions">
        <list>
          <value>.transformed</value>
        </list>
      </property>
    </bean>
    <bean id="transformedFileHandlingHelper" class="com.thomsonreuters.uscl.ereader.ioutil.FileHandlingHelper"
  		  p:filter-ref="transformedFileFilter"/>

	<bean id="tranformerService" class="com.thomsonreuters.uscl.ereader.format.service.TransformerServiceImpl"
		  p:docMetadataService-ref="docMetadataService"
		  p:xsltMapperService-ref="xsltMapperService"
		  p:fileHandlingHelper-ref="xmlFileHandlingHelper"/>
	<bean id="htmlWrapperService" class="com.thomsonreuters.uscl.ereader.format.service.HTMLWrapperServiceImpl"
		  p:fileHandlingHelper-ref="transformedFileHandlingHelper"/>
	<bean id="xmlImageParserService" class="com.thomsonreuters.uscl.ereader.format.service.XMLImageParserServiceImpl"
		  p:fileHandlingHelper-ref="xmlFileHandlingHelper"/>
	
	<bean id="titleMetadataService" class="com.thomsonreuters.uscl.ereader.proview.TitleMetadataServiceImpl"/>
	<bean id="eBookAssemblyService" class="com.thomsonreuters.uscl.ereader.assemble.service.EBookAssemblyServiceImpl"/>
	
	<bean id="proviewClient" class="com.thomsonreuters.uscl.ereader.deliver.service.ProviewClientImpl"
		  p:getTitlesUriTemplate="http://${proview.domain}/v1/titles/uscl/all"
		  p:publishTitleUriTemplate="http://${proview.domain}/v1/title/{titleId}/{eBookVersionNumber}"
		  p:restTemplate-ref="proviewRestTemplate"/>
		  
	<bean id="proviewRestTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="requestFactory">
			<bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
				<property name="httpClient" ref="basicAuthenticationHttpClient"/>
			</bean>
		</property>
		<property name="messageConverters">
			<list>
				<bean class="com.thomsonreuters.uscl.ereader.deliver.rest.ProviewMessageConverter"/>
			</list>
		</property>
		<property name="errorHandler">
			<bean class="com.thomsonreuters.uscl.ereader.deliver.rest.ProviewHttpResponseErrorHandler"/>
		</property>
	</bean>

	<bean id="basicAuthenticationHttpClientFactory" class="com.thomsonreuters.uscl.ereader.deliver.rest.BasicAuthenticationHttpClientFactory">
		<constructor-arg name="host" value="${proview.domain}"/>
		<constructor-arg name="username" value="${proview.username}"/>
		<constructor-arg name="password" value="${proview.password}"/>
	</bean>
	
	<bean id="basicAuthenticationHttpClient" factory-bean="basicAuthenticationHttpClientFactory" factory-method="getBasicAuthenticationHttpClient"/>
	
	<bean id="imageVerticalRestTemplateFactory" class="com.thomsonreuters.uscl.ereader.gather.image.service.ImageVerticalRestTemplateFactoryImpl"/>
	<bean id="imageService" class="com.thomsonreuters.uscl.ereader.gather.image.service.ImageServiceImpl"
		  p:singletonRestTemplate-ref="restTemplate"
		  p:imageVerticalRestServiceUrl="${image.vertical.context.url}"
		  p:sleepIntervalBetweenImages="500"
		  p:urlVersion="v1"
		  p:imageDao-ref="imageDao"
		  p:imageVerticalRestTemplateFactory-ref="imageVerticalRestTemplateFactory"/>

	<bean id="gatherService" class="com.thomsonreuters.uscl.ereader.gather.restclient.service.GatherServiceImpl"
		  p:restTemplate-ref="restTemplate"
		  p:gatherAppContextUrl="${gather.context.url}"/>
		 
	<bean id="docMetaXMLParser" class="com.thomsonreuters.uscl.ereader.gather.metadata.service.DocMetaDataXMLParser"/>
		  
</beans>