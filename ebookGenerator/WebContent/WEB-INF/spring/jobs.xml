<beans:beans xmlns="http://www.springframework.org/schema/batch" 
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:p="http://www.springframework.org/schema/p"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="
           http://www.springframework.org/schema/beans 	 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/batch   http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">

	<job id="ebookBundleJob">
	<!-- Job for retrieving and preparing XPP source bundles sent by Phoenix -->
		<step id="retrieveRequest">
			<tasklet ref="retrieveRequestTask" />
			<next on="COMPLETED" to="retrieveBundle" />
			<fail on="FAILED" />
		</step>
		<step id="retrieveBundle">
			<tasklet ref="retrieveBundleTask" />
			<next on="COMPLETED" to="stageBundle" />
			<fail on="FAILED" />
		</step>
		<step id="stageBundle">
			<tasklet ref="stageBundleTask" />
			<end on="COMPLETED" />
			<fail on="FAILED" />
		</step>
	</job>
	
	<beans:bean id="requestParentTask" abstract="true" class="com.thomsonreuters.uscl.ereader.orchestrate.core.tasklet.AbstractSbTasklet"
				p:coreService-ref="coreService"
				p:outageProcessor-ref="outageProcessor"
				p:notificationService-ref="requestNotificationService"/>
	<beans:bean id="retrieveRequestTask" class="com.thomsonreuters.uscl.ereader.request.step.RetrieveRequestTask" parent="requestParentTask"
		  		p:EBookRequestValidator-ref="eBookRequestValidator"/>
	<beans:bean id="retrieveBundleTask" class="com.thomsonreuters.uscl.ereader.request.step.RetrieveBundleTask" parent="requestParentTask" 
				p:EBookRequestValidator-ref="eBookRequestValidator"/>
	<beans:bean id="stageBundleTask" class="com.thomsonreuters.uscl.ereader.request.step.StageBundleTask" parent="requestParentTask"
				p:GZIPService-ref="gzipService" 
		  		p:bundleArchiveDao-ref="bundleArchiveDao" />
		  		
	<beans:bean id="generatorStepFailureNotificationService" 
		class="com.thomsonreuters.uscl.ereader.generator.common.GeneratorStepFailureNotificationServiceImpl" />
	
	<!-- ============================ -->
	
	<job id="ebookGeneratorJob">
		<step id="initializeJob">
			<tasklet ref="initializeTask"/>
			<next on="COMPLETED" to="decision"/>
			<fail on="FAILED"/>
		</step>
		
		<decision id="decision" decider="NovusOrFileDecider">
			<next on="NAS_FILE" to="generateToc" />
			<next on="NOVUS" to="getToc" />
		</decision>
		
		<!-- Fetch TOC from Gather REST service -->
		<step id="getToc">
			<tasklet ref="getTocTask"/>
			<next on="COMPLETED" to="getDocAndMetadata"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Fetch document(s) and their metadata from Gather REST service using TOC info from previous step -->
		<step id="getDocAndMetadata">
			<tasklet ref="getDocAndMetadataTask"/>
			<next on="COMPLETED" to="persistMetadata"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Generate TOC from Codes Workbench NORT file -->
		<step id="generateToc">
			<tasklet ref="generateTocTask"/>
			<next on="COMPLETED" to="generateDocAndMetadata"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Generate document(s) and their metadata from Codes Workbench DOC file using TOC info from previous step -->
		<step id="generateDocAndMetadata">
			<tasklet ref="generateDocAndMetadataTask"/>
			<next on="COMPLETED" to="persistMetadata"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Parse and Persist meta data obtained from Gather step -->
		<step id="persistMetadata">
			<tasklet ref="persistDocMetadataTask"/>
			<next on="COMPLETED" to="parseImageGuids"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Parses out all referenced image guids and generates a static file used to download images -->
		<step id="parseImageGuids">
			<tasklet ref="parseImageGuidsTask"/>
			<next on="COMPLETED" to="getDynamicImages"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Fetch images from Image Vertical REST service -->
		<step id="getDynamicImages">
			<tasklet ref="getDynamicImagesTask"/>
			<next on="COMPLETED" to="generateFrontMatterHTML"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Format the XML documents -->
		<step id="generateFrontMatterHTML">
			<tasklet ref="generateFrontMatterTask"/>
			<next on="COMPLETED" to="generateImageMetadataFiles"/>
			<fail on="FAILED"/>
		</step>
		
		<step id="generateImageMetadataFiles">
			<tasklet ref="generateImageMetadataTask"/>
			<next on="COMPLETED" to="formatPreprocessXML"/>
			<fail on="FAILED"/>
		</step>
		
		<step id="formatPreprocessXML">
			<tasklet ref="formatPreprocessXMLTask"/>
			<next on="COMPLETED" to="formatTransformXML"/>
			<fail on="FAILED"/>
		</step>
		
		<step id="formatTransformXML">
			<tasklet ref="formatTransformXMLTask"/>
			<next on="COMPLETED" to="splitDecision"/>
			<fail on="FAILED"/>
		</step>
		
		<decision id="splitDecision" decider="splitBookDecider">
			<next on="SPLIT_BOOK" to="generateSplitToc" />
			<next on="SINGLE_BOOK" to="formatHTMLTransformer" />
		</decision>
		<!-- Toc will be generated with titlebreak elements  -->
		<step id="generateSplitToc">
			<tasklet ref="generateSplitTocTask"/>
			<next on="COMPLETED" to="formatHTMLTransformer"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Cleanup or modify any HTML elements that need to be changed for ProView -->
		<step id="formatHTMLTransformer">
			<tasklet ref="formatHTMLTransformerTask"/>
			<next on="COMPLETED" to="formatHTMLCreateNamedAnchors"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Add missing HTML anchor elements for ProView internal linking -->
        <step id="formatHTMLCreateNamedAnchors">
                  <tasklet ref="formatHTMLCreateNamedAnchorsTask"/>
                  <next on="COMPLETED" to="formatHTMLRemoveBrokenInternalLinks"/>
                  <fail on="FAILED"/>
        </step>
        
		<!-- Remove HTML anchor elements for broken anchors for ProView internal linking -->
        <step id="formatHTMLRemoveBrokenInternalLinks">
                  <tasklet ref="formatHTMLRemoveBrokenInternalLinksTask"/>
                  <next on="COMPLETED" to="formatAddHTMLWrapper"/>
                  <fail on="FAILED"/>
        </step>		
		
		<!-- Wrap HTML in required HTML header and footer -->
		<step id="formatAddHTMLWrapper">
			<tasklet ref="formatAddHTMLWrapperTask"/>
			<next on="COMPLETED" to="getStaticImages"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Fetch static images from a pre-existing filesystem directory tree -->
		<step id="getStaticImages">
			<tasklet ref="getStaticImagesTask"/>
			<next on="COMPLETED" to="moveDecision"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Create titlemanifest and then move resources for split book -->
		<decision id="moveDecision" decider="splitBookDecider">
			<next on="SPLIT_BOOK" to="generateTitleManifest" />
			<next on="SINGLE_BOOK" to="moveResourcesToAssemblyDirectory" />
		</decision>
		
		<step id="generateTitleManifest">
			<tasklet ref="generateTitleManifestTask"/>
			<next on="COMPLETED" to="nextTask"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Create titlemanifest and then move resources for split book -->
		<decision id="nextTask" decider="splitBookDecider">
			<next on="SPLIT_BOOK" to="moveSplitBookResources" />
			<next on="SINGLE_BOOK" to="assembleEBook" />
		</decision>
				
		
		<!-- Assemble the title -->
		<step id="moveResourcesToAssemblyDirectory">
			<tasklet ref="moveResourcesToAssemblyDirectoryTask"/>
			<next on="COMPLETED" to="generateTitleManifest"/>
			<fail on="FAILED"/>
		</step>		
		
		<step id="moveSplitBookResources">
			<tasklet ref="createDirectoriesAndMoveResourcesTask"/>
			<next on="COMPLETED" to="assembleEBook"/>
			<fail on="FAILED"/>
		</step>
		
		<step id="assembleEBook">
			<tasklet ref="assembleEBookTask"/>
			<next on="COMPLETED" to="deliverEBook"/>
			<fail on="FAILED"/>
		</step>

		<!-- Deliver the title to ProView -->
		<step id="deliverEBook">
			<tasklet ref="deliverEBookTask"/>
			<fail on="FAILED"/>
			<next on="COMPLETED" to="groupBook"/>
		</step>
		
		<step id="groupBook">
			<tasklet ref="groupEBookTask"/>
			<fail on="FAILED"/>
			<next on="COMPLETED" to="archiveBook"/>
		</step>

		<!-- Production only: archive the last book created -->
		<step id="archiveBook">
			<tasklet ref="archiveBookTask"/>
			<fail on="FAILED"/>
			<next on="COMPLETED" to="sendEmailNotification"/>
		</step>

		<step id="sendEmailNotification">
			<tasklet ref="sendNotificationTask"/>
			<fail on="FAILED"/>
			<end on="COMPLETED"/>
		</step>
	</job>
	
	<!-- Define each task here -->
	<beans:bean id="generatorParentTask" abstract="true" class="com.thomsonreuters.uscl.ereader.orchestrate.core.tasklet.AbstractSbTasklet"
			    p:coreService-ref="coreService"
				p:outageProcessor-ref="outageProcessor"
				p:notificationService-ref="generatorNotificationService"/>
	<beans:bean id="stubTask" class="com.thomsonreuters.uscl.ereader.stub.StubTasklet" parent="generatorParentTask"/>
	<beans:bean id="initializeTask" class="com.thomsonreuters.uscl.ereader.InitializeTask" parent="generatorParentTask"
				p:environmentName-ref="environmentName"
				p:rootWorkDirectory="${root.work.directory}"
				p:rootCodesWorkbenchLandingStrip="${codes.workbench.root.dir}"
				p:publishingStatsService-ref="publishingStatsService"
				p:ebookAuditService-ref="eBookAuditService"
				p:bookDefnService-ref="bookDefinitionService"
				p:staticContentDirectory="${static.content.dir}"/>
	<beans:bean id="NovusOrFileDecider" class="com.thomsonreuters.uscl.ereader.decider.NovusOrFileDecider"/>
	<beans:bean id="getTocTask" class="com.thomsonreuters.uscl.ereader.gather.step.GetTocTask" parent="generatorParentTask"
				p:gatherService-ref="gatherService"
				p:publishingStatsService-ref="publishingStatsService"
				p:bookDefinitionService-ref="bookDefinitionService"/>				
	<beans:bean id="getDocAndMetadataTask" class="com.thomsonreuters.uscl.ereader.gather.step.GatherDocAndMetadataTask" parent="generatorParentTask"
				p:gatherService-ref="gatherService"
				p:docMetadataGuidParserService-ref="docMetadataGuidParserService"
				p:publishingStatsService-ref="publishingStatsService"/>
	<beans:bean id="generateTocTask" class="com.thomsonreuters.uscl.ereader.gather.step.GenerateTocTask" parent="generatorParentTask"
				p:novusNortFileService-ref="novusNortFileService"
				p:publishingStatsService-ref="publishingStatsService"
				p:bookDefinitionService-ref="bookDefinitionService"/>				
	<beans:bean id="generateDocAndMetadataTask" class="com.thomsonreuters.uscl.ereader.gather.step.GenerateDocAndMetadataTask" parent="generatorParentTask"
				p:novusDocFileService-ref="novusDocFileService"
				p:docMetadataGuidParserService-ref="docMetadataGuidParserService"
				p:publishingStatsService-ref="publishingStatsService"/>
	<beans:bean id="persistDocMetadataTask" class="com.thomsonreuters.uscl.ereader.gather.step.PersistMetadataXMLTask" parent="generatorParentTask"
				p:docMetadataService-ref="docMetadataService"		
				p:publishingStatsService-ref="publishingStatsService"/>							
	<beans:bean id="getDynamicImagesTask" class="com.thomsonreuters.uscl.ereader.gather.step.GatherDynamicImagesTask" 
                scope="step" parent="bookStep"/>
	<beans:bean id="getStaticImagesTask" class="com.thomsonreuters.uscl.ereader.gather.step.GatherStaticImagesTask" parent="generatorParentTask"
	            p:publishingStatsService-ref="publishingStatsService"
				p:imageService-ref="imageService"/>
	<beans:bean id="parseImageGuidsTask" class="com.thomsonreuters.uscl.ereader.format.step.ParseImageGUIDList" parent="generatorParentTask"
				p:publishingStatsService-ref="publishingStatsService"
				p:xmlImageParserService-ref="xmlImageParserService"/>
	<beans:bean id="generateFrontMatterTask" class="com.thomsonreuters.uscl.ereader.format.step.GenerateFrontMatterHTMLPages" parent="generatorParentTask"
				p:publishingStatsService-ref="publishingStatsService"
				p:frontMatterService-ref="createFrontMatterService"/>
	<beans:bean id="generateImageMetadataTask" class="com.thomsonreuters.uscl.ereader.format.step.GenerateImageMetadataFiles" parent="generatorParentTask"
				p:publishingStatsService-ref="publishingStatsService"
				p:imgMetaBlockService-ref="generateImgMetaBlockService"/>
	<beans:bean id="formatPreprocessXMLTask" class="com.thomsonreuters.uscl.ereader.format.step.PreprocessXML" parent="generatorParentTask"
				p:publishingStatsService-ref="publishingStatsService"
				p:preprocessService-ref="preprocessService"/>
	<beans:bean id="formatTransformXMLTask" class="com.thomsonreuters.uscl.ereader.format.step.TransformXML" parent="generatorParentTask"
				p:publishingStatsService-ref="publishingStatsService"
				p:transformerService-ref="tranformerService"/>
				
	<beans:bean id="splitBookDecider" class="com.thomsonreuters.uscl.ereader.decider.SplitBookDecider"/>
	<beans:bean id="generateSplitTocTask" class="com.thomsonreuters.uscl.ereader.gather.step.GenerateSplitTocTask" parent="generatorParentTask"
				p:publishingStatsService-ref="publishingStatsService"
				p:splitBookTocParseService-ref="splitBookTocParseService"
				p:fileHandlingHelper-ref="transformedFileHandlingHelper"
				p:docMetadataService-ref="docMetadataService"
				p:autoSplitGuidsService-ref="autoSplitGuidsService"/>  
							
	<beans:bean id="formatHTMLTransformerTask" class="com.thomsonreuters.uscl.ereader.format.step.HTMLPostTransform" parent="generatorParentTask"
				p:publishingStatsService-ref="publishingStatsService"
				p:transformerService-ref="htmlTransformerService"/>
				
	<beans:bean id="formatHTMLCreateNamedAnchorsTask" class="com.thomsonreuters.uscl.ereader.format.step.HTMLCreateNamedAnchors" parent="generatorParentTask"
				p:publishingStatsService-ref="publishingStatsService"
				p:transformerCreateAnchorService-ref="htmlCreateNamedAnchorsService"/>
	<beans:bean id="formatHTMLRemoveBrokenInternalLinksTask" class="com.thomsonreuters.uscl.ereader.format.step.HTMLRemoveBrokenInternalLinks" parent="generatorParentTask"
				p:publishingStatsService-ref="publishingStatsService"
				p:transformerUnlinkService-ref="htmlRemoveBrokenInternalLinksService"/>
				
	<beans:bean id="formatAddHTMLWrapperTask" class="com.thomsonreuters.uscl.ereader.format.step.AddHTMLWrapper" parent="generatorParentTask"
				p:htmlWrapperService-ref="htmlWrapperService"
				p:publishingStatsService-ref="publishingStatsService"/>
	<beans:bean id="moveResourcesToAssemblyDirectoryTask" class="com.thomsonreuters.uscl.ereader.assemble.step.MoveResourcesToAssemblyDirectory" parent="generatorParentTask"
	            p:publishingStatsService-ref="publishingStatsService"
	            p:moveResourcesUtil-ref="moveResourcesUtil"/>
	<beans:bean id="createDirectoriesAndMoveResourcesTask" class="com.thomsonreuters.uscl.ereader.assemble.step.CreateDirectoriesAndMoveResources" parent="generatorParentTask"
	            p:publishingStatsService-ref="publishingStatsService"
	            p:titleMetadataService-ref="titleMetadataService"
	            p:moveResourcesUtil-ref="moveResourcesUtil"
	            p:bookDefinitionService-ref="bookDefinitionService"/>
	<beans:bean id="generateTitleManifestTask" class="com.thomsonreuters.uscl.ereader.format.step.GenerateTitleMetadata" parent="generatorParentTask"
				p:publishingStatsService-ref="publishingStatsService"
				p:titleMetadataService-ref="titleMetadataService"/>	
	<beans:bean id="assembleEBookTask" scope="step" parent="assembleStep"
				class="com.thomsonreuters.uscl.ereader.assemble.step.AssembleEbook" />
	<beans:bean id="deliverEBookTask" scope="step" parent="deliverStep"
				class="com.thomsonreuters.uscl.ereader.deliver.step.DeliverToProview" />
	<beans:bean id="groupEBookTask" scope="step" parent="groupStep"
				class="com.thomsonreuters.uscl.ereader.group.step.GroupEbooks" />
	<beans:bean id="archiveBookTask" scope="step" parent="archiveStep"
				class="com.thomsonreuters.uscl.ereader.deliver.step.ArchiveBook" />
	<beans:bean id="sendNotificationTask" class="com.thomsonreuters.uscl.ereader.notification.step.SendEmailNotificationStepImpl"  
		scope="step" parent="bookStep" />
	<beans:bean id="abstractGeneratorNotificationEmailBuilder" 
		class="com.thomsonreuters.uscl.ereader.notification.service.AbstractEmailBuilder"  
		scope="step" abstract="true" />
	<beans:bean id="defaultGeneratorNotificationEmailBuilder" 
		class="com.thomsonreuters.uscl.ereader.notification.service.DefaultEmailBuilder"  
		scope="step" parent="abstractGeneratorNotificationEmailBuilder" />
	<beans:bean id="bigTocGeneratorNotificationEmailBuilder" 
		class="com.thomsonreuters.uscl.ereader.notification.service.BigTocEmailBuilder"  
		scope="step" parent="abstractGeneratorNotificationEmailBuilder" />
	<beans:bean id="splitBookGeneratorNotificationEmailBuilder" 
		class="com.thomsonreuters.uscl.ereader.notification.service.SplitBookEmailBuilder"  
		scope="step" parent="abstractGeneratorNotificationEmailBuilder" />
	<beans:bean id="sendNotificationEmailBuilderFactory"
		class="com.thomsonreuters.uscl.ereader.notification.service.SendNotificationEmailBuilderFactory" />

</beans:beans>
