<beans:beans xmlns="http://www.springframework.org/schema/batch" 
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:p="http://www.springframework.org/schema/p"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="
           http://www.springframework.org/schema/beans 	 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/batch   http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">
 
	<job id="ebookGeneratorJob">
		<step id="initializeJob">
			<tasklet ref="initializeTask"/>
			<next on="COMPLETED" to="getToc"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Fetch TOC from Gather REST service -->
		<step id="getToc">
			<tasklet ref="getTocTask"/>
			<next on="COMPLETED" to="getDocAndMetadata"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Fetch document(s) and their metadata from Gather REST service using TOC info from previous step -->
		<step id="getDocAndMetadata">
			<tasklet ref="getDocAndMetadataTask"/>
			<next on="COMPLETED" to="persistMetadata"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Parse and Persist meta data obtained from Gather step -->
		<step id="persistMetadata">
			<tasklet ref="persistDocMetadataTask"/>
			<next on="COMPLETED" to="mockGatherSteps"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Mocks up the gather steps for sample static book runs -->
		<step id="mockGatherSteps">
			<tasklet ref="mockGatherTask"/>
			<next on="COMPLETED" to="parseImageGuids"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Parses out all referenced image guids and generates a static file used to download images -->
		<step id="parseImageGuids">
			<tasklet ref="parseImageGuidsTask"/>
			<next on="COMPLETED" to="getDynamicImages"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Fetch images from Image Vertical REST service -->
		<step id="getDynamicImages">
			<tasklet ref="getDynamicImagesTask"/>
			<next on="COMPLETED" to="formatTransformXML"/>
			<next on="FAILED" to="formatTransformXML"/> <!-- Change to fail once PDF issue has been resolved -->
		</step>
		
		<!-- Format the XML documents -->
		<step id="formatTransformXML">
			<tasklet ref="formatTransformXMLTask"/>
			<next on="COMPLETED" to="formatHTMLTransformer"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Cleanup or modify any HTML elements that need to be changed for ProView -->
		<step id="formatHTMLTransformer">
			<tasklet ref="formatHTMLTransformerTask"/>
			<next on="COMPLETED" to="formatAddHTMLWrapper"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Wrap HTML in required HTML header and footer -->
		<step id="formatAddHTMLWrapper">
			<tasklet ref="formatAddHTMLWrapperTask"/>
			<next on="COMPLETED" to="getStaticImages"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Fetch static images from a pre-existing filesystem directory tree -->
		<step id="getStaticImages">
			<tasklet ref="getStaticImagesTask"/>
			<next on="COMPLETED" to="moveResourcesToAssemblyDirectory"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Assemble the title -->
		<step id="moveResourcesToAssemblyDirectory">
			<tasklet ref="moveResourcesToAssemblyDirectoryTask"/>
			<next on="COMPLETED" to="generateTitleManifest"/>
			<fail on="FAILED"/>
		</step>
		
		<step id="generateTitleManifest">
			<tasklet ref="generateTitleManifestTask"/>
			<next on="COMPLETED" to="titleMetadataAnchorUpdate"/>
			<fail on="FAILED"/>
		</step>
		
		<step id="titleMetadataAnchorUpdate">
			<tasklet ref="titleMetadataAnchorUpdateTask"/>
			<next on="COMPLETED" to="assembleEBook"/>
			<fail on="FAILED"/>
		</step>
		
		<step id="assembleEBook">
			<tasklet ref="assembleEBookTask"/>
			<next on="COMPLETED" to="deliverEBook"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Deliver the title to ProView -->
		<step id="deliverEBook">
			<tasklet ref="deliverEBookTask"/>
			<fail on="FAILED"/>
			<end on="COMPLETED"/>
		</step>
	</job>
	
	<!-- Define each task here -->
	<beans:bean id="stubTask" class="com.thomsonreuters.uscl.ereader.stub.StubTasklet"/>
	<beans:bean id="initializeTask" class="com.thomsonreuters.uscl.ereader.InitializeTask"
				p:rootWorkDirectory="/apps/eBookBuilder"/>
	<beans:bean id="getTocTask" class="com.thomsonreuters.uscl.ereader.gather.step.GetTocTask"
				p:gatherService-ref="gatherService"/>				
	<beans:bean id="getDocAndMetadataTask" class="com.thomsonreuters.uscl.ereader.gather.step.GatherDocAndMetadataTask"
				p:gatherService-ref="gatherService"
				p:docMetadataGuidParserService-ref="docMetadataGuidParserService"/>			
	<beans:bean id="persistDocMetadataTask" class="com.thomsonreuters.uscl.ereader.gather.step.PersistMetadataXMLTask"
				p:docMetadataService-ref="docMetadataService"/>							
	<beans:bean id="mockGatherTask" class="com.thomsonreuters.uscl.ereader.format.step.MockUpGatherSteps"/>
	<beans:bean id="getDynamicImagesTask" class="com.thomsonreuters.uscl.ereader.gather.step.GatherImageVerticalImagesTask"
				p:imageService-ref="imageService"/>
	<beans:bean id="getStaticImagesTask" class="com.thomsonreuters.uscl.ereader.gather.step.GatherStaticImagesTask"
				p:imageService-ref="imageService"/>
	<beans:bean id="parseImageGuidsTask" class="com.thomsonreuters.uscl.ereader.format.step.ParseImageGUIDList"
				p:xmlImageParserService-ref="xmlImageParserService"/>
	<beans:bean id="formatTransformXMLTask" class="com.thomsonreuters.uscl.ereader.format.step.TransformXML"
				p:transformerService-ref="tranformerService"/>
	<beans:bean id="formatHTMLTransformerTask" class="com.thomsonreuters.uscl.ereader.format.step.HTMLPostTransform"
				p:transformerService-ref="htmlTransformerService"/>
	<beans:bean id="formatAddHTMLWrapperTask" class="com.thomsonreuters.uscl.ereader.format.step.AddHTMLWrapper"
				p:htmlWrapperService-ref="htmlWrapperService"/>
	<beans:bean id="generateTitleManifestTask" class="com.thomsonreuters.uscl.ereader.format.step.GenerateTitleMetadata"
				p:titleMetadataService-ref="titleMetadataService"
				p:docMetadataService-ref="docMetadataService"							
				p:stylesheetPath="/apps/ebookbuilder/stylesheet/document.css"/>
	<beans:bean id="titleMetadataAnchorUpdateTask" class="com.thomsonreuters.uscl.ereader.format.step.TitleMetadataAnchorUpdate"
				p:anchorUpdateService-ref="titleMetadataAnchorUpdateService"/>
	<beans:bean id="assembleEBookTask" class="com.thomsonreuters.uscl.ereader.assemble.step.AssembleEbook"
				p:eBookAssemblyService-ref="eBookAssemblyService"/>
	<beans:bean id="deliverEBookTask" class="com.thomsonreuters.uscl.ereader.deliver.step.DeliverToProview"
				p:proviewClient-ref="proviewClient"/>
	<beans:bean id="moveResourcesToAssemblyDirectoryTask" class="com.thomsonreuters.uscl.ereader.assemble.step.MoveResourcesToAssemblyDirectory"/>
</beans:beans>