<beans:beans xmlns="http://www.springframework.org/schema/batch" 
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:p="http://www.springframework.org/schema/p"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="
           http://www.springframework.org/schema/beans 	 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/batch   http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">
 
	<job id="ebookGeneratorJob">
		<step id="initializeJob">
			<tasklet ref="initializeTask"/>
			<next on="COMPLETED" to="define"/>
			<fail on="FAILED"/>
		</step>
		
		<step id="define">
			<tasklet ref="stubTask"/>
			<next on="COMPLETED" to="parseImageGuids"/>
		</step>
		
		<step id="parseImageGuids">
			<tasklet ref="parseImageGuidsTask"/>
			<next on="COMPLETED" to="getDynamicImages"/>
			<next on="FAILED" to="getDynamicImages"/>
		</step>
		
		<!-- Fetch images from Image Vertical REST service -->
		<step id="getDynamicImages">
			<tasklet ref="getDynamicImagesTask"/>
			<next on="COMPLETED" to="getStaticImages"/>
			<next on="FAILED" to="getStaticImages"/>	<!-- TODO: eventually fail the job -->
		</step>
		
		<!-- Fetch static images from a pre-existing filesystem directory tree -->
		<step id="getStaticImages">
			<tasklet ref="getStaticImagesTask"/>
			<next on="COMPLETED" to="combineImageFiles"/>
			<next on="FAILED" to="combineImageFiles"/>	<!-- TODO: eventually fail the job -->
		</step>
		
		<!-- Copy the dynamic and static image files into a single filesystem directory -->
		<step id="combineImageFiles">
			<tasklet ref="stubTask"/>
			<next on="COMPLETED" to="format"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Run Format Steps -->
		<step id="format">
			<tasklet ref="stubTask"/>
			<next on="COMPLETED" to="formatTransformXML"/>
		</step>

		<step id="formatTransformXML">
			<tasklet ref="formatTransformXMLTask"/>
			<next on="COMPLETED" to="formatAddHTMLWrapper"/>
			<next on="FAILED" to="formatAddHTMLWrapper"/>
		</step>
		
		<step id="formatAddHTMLWrapper">
			<tasklet ref="formatAddHTMLWrapperTask"/>
			<next on="COMPLETED" to="generateTitleManifest"/>
			<next on="FAILED" to="generateTitleManifest"/>
		</step>
		
		<step id="generateTitleManifest">
			<tasklet ref="generateTitleManifestTask"/>
			<next on="COMPLETED" to="moveResourcesToAssemblyDirectory"/>
			<next on="FAILED" to="moveResourcesToAssemblyDirectory"/>
		</step>
		
		<!-- Assemble the title -->
		<step id="moveResourcesToAssemblyDirectory">
			<tasklet ref="stubTask"/>
			<next on="COMPLETED" to="assembleEBook"/>
		</step>
		
		<step id="assembleEBook">
			<tasklet ref="assembleEBookTask"/>
			<next on="COMPLETED" to="deliverEBook"/>
			<fail on="FAILED"/>
		</step>
		
		<!-- Deliver the title to ProView -->
		<step id="deliverEBook">
			<tasklet ref="deliverEBookTask"/>
		</step>
	</job>
	
	<!-- Define each task here -->
	<beans:bean id="stubTask" class="com.thomsonreuters.uscl.ereader.stub.StubTasklet"/>
	<beans:bean id="initializeTask" class="com.thomsonreuters.uscl.ereader.InitializeTask"
				p:rootWorkDirectory="/apps/ebookbuilder/data"/>
	<beans:bean id="getDynamicImagesTask" class="com.thomsonreuters.uscl.ereader.gather.step.GatherImageVerticalImagesTask"
				p:imageService-ref="imageService"/>
	<beans:bean id="getStaticImagesTask" class="com.thomsonreuters.uscl.ereader.gather.step.GatherStaticImagesTask"
				p:imageService-ref="imageService"/>
	<beans:bean id="parseImageGuidsTask" class="com.thomsonreuters.uscl.ereader.format.step.ParseImageGUIDList"
				p:xmlImageParserService-ref="xmlImageParserService"/>
	<beans:bean id="formatTransformXMLTask" class="com.thomsonreuters.uscl.ereader.format.step.TransformXML"
				p:transformerService-ref="tranformerService"/>
	<beans:bean id="formatAddHTMLWrapperTask" class="com.thomsonreuters.uscl.ereader.format.step.AddHTMLWrapper"
				p:htmlWrapperService-ref="htmlWrapperService"/>
	<beans:bean id="generateTitleManifestTask" class="com.thomsonreuters.uscl.ereader.format.step.GenerateTitleMetadata"
				p:titleMetadataService-ref="titleMetadataService"
				p:stylesheetPath="/apps/ebookbuilder/stylesheet/document.css"/>
	<beans:bean id="assembleEBookTask" class="com.thomsonreuters.uscl.ereader.assemble.step.AssembleEbook"
				p:eBookAssemblyService-ref="eBookAssemblyService"/>
	<beans:bean id="deliverEBookTask" class="com.thomsonreuters.uscl.ereader.deliver.step.DeliverToProview"
				p:proviewClient-ref="proviewClient"/>
</beans:beans>