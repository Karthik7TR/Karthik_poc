<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        				   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
        				   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        				   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler"
                    p:nativeJdbcExtractor-ref="nativeJdbcExtractor"/>
                                
    <bean id="nativeJdbcExtractor" 
                class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"/>

	<!--
		Hibernate session factory definition that uses annotations in the entities to map to tables/columns.
	-->
  	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
	      <props>
	        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
	      	<prop key="hibernate.show_sql">${hibernate.show.sql}</prop>
	      	<prop key="hibernate.cache.provider_class">${hibernate.cache.provider.class}</prop>
	      </props>
		</property>
		<property name="annotatedClasses">
		  <list>
		    <value>com.thomsonreuters.uscl.ereader.core.job.domain.AppParameter</value>
		    <value>com.thomsonreuters.uscl.ereader.core.outage.domain.PlannedOutage</value>
		    <value>com.thomsonreuters.uscl.ereader.core.outage.domain.OutageType</value>
			<value>com.thomsonreuters.uscl.ereader.core.book.domain.BookDefinition</value>
		  	<value>com.thomsonreuters.uscl.ereader.format.domain.XSLTMapperEntity</value>
		  	<value>com.thomsonreuters.uscl.ereader.gather.image.domain.ImageMetadataEntity</value>
		  	<value>com.thomsonreuters.uscl.ereader.gather.metadata.domain.DocMetadata</value>
		  	<value>com.thomsonreuters.uscl.ereader.gather.metadata.domain.PaceMetadata</value>
			<value>com.thomsonreuters.uscl.ereader.core.book.domain.Author</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.DocumentTypeCode</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.EbookAudit</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.EbookName</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.JurisTypeCode</value>	
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.KeywordTypeCode</value>	
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.KeywordTypeValue</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.PublisherCode</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.PubTypeCode</value>
			<value>com.thomsonreuters.uscl.ereader.stats.domain.PublishingStats</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.statecode.StateCode</value>
		    <value>com.thomsonreuters.uscl.ereader.core.job.domain.JobRequest</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.FrontMatterPage</value>	
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.FrontMatterSection</value>	
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.FrontMatterPdf</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.ExcludeDocument</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.RenameTocEntry</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.TableViewer</value>
		    <value>com.thomsonreuters.uscl.ereader.userpreference.domain.UserPreference</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.DocumentCopyright</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.SplitDocument</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.SplitNodeInfo</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.DocumentCurrency</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.NortFileLocation</value>
		    <value>com.thomsonreuters.uscl.ereader.proviewaudit.domain.ProviewAudit</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.PilotBook</value>
		    <value>com.thomsonreuters.uscl.ereader.request.EBookRequest</value>
		  </list>
		</property>
  	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		  p:sessionFactory-ref="sessionFactory"/>

	<!-- Enable the configuration of transactional behavior based on @Transactional annotations -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

  	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
  		  p:dataSource-ref="dataSource"/>

	<!-- ====================================== 
			Data Access Objects (DAO's)
		 ====================================== --> 
		 
	<bean id="appParameterDao" class="com.thomsonreuters.uscl.ereader.core.job.dao.AppParameterDaoImpl">
		<constructor-arg ref="sessionFactory"/>
	</bean>		 
	<bean id="bookDefinitionDao" class="com.thomsonreuters.uscl.ereader.core.book.dao.BookDefinitionDaoImpl">
		<constructor-arg ref="sessionFactory"/>
	</bean>
	<bean id="imageDao" class="com.thomsonreuters.uscl.ereader.gather.image.dao.ImageDaoImpl">
		<constructor-arg ref="sessionFactory"/>
	</bean>
	<bean id="docMetaDataDao" class="com.thomsonreuters.uscl.ereader.gather.metadata.dao.DocMetadataDaoImpl">
		  <constructor-arg ref="sessionFactory"/>
	</bean>
	<bean id="paceMetaDataDao" class="com.thomsonreuters.uscl.ereader.gather.metadata.dao.PaceMetadataDaoImpl">
		  <constructor-arg ref="sessionFactory"/>
	</bean>
	<bean id="publishingStatsDao" class="com.thomsonreuters.uscl.ereader.stats.dao.PublishingStatsDaoImpl">
		  <constructor-arg ref="sessionFactory"/>
	</bean>
	<bean id="htmlFormatDocMetaDataDao" class="com.thomsonreuters.uscl.ereader.gather.metadata.dao.DocMetadataDaoImpl">
		  <constructor-arg ref="sessionFactory"/>
	</bean>
	
	<bean id="eBookAuditDAO" class="com.thomsonreuters.uscl.ereader.core.book.dao.EBookAuditDaoImpl">
		  <constructor-arg ref="sessionFactory"/>
	</bean>	
		  
	<bean id="codeDao" class="com.thomsonreuters.uscl.ereader.core.book.dao.CodeDaoImpl">
		<constructor-arg ref="sessionFactory"/>
	</bean>
	<bean id="stateCodeDao" class="com.thomsonreuters.uscl.ereader.core.book.statecode.StateCodeDaoImpl">
		<constructor-arg ref="sessionFactory"/>
	</bean>
	
	<bean id="proviewAuditDao" class="com.thomsonreuters.uscl.ereader.proviewaudit.dao.ProviewAuditDaoImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>	
	
	<bean id="outageDao" class="com.thomsonreuters.uscl.ereader.core.outage.dao.OutageDaoImpl">  
		<constructor-arg ref="sessionFactory"/>
	</bean>
	
	<bean id="jobRequestDao" class="com.thomsonreuters.uscl.ereader.core.job.dao.JobRequestDaoImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>
  	<bean id="xsltMapperDao" class="com.thomsonreuters.uscl.ereader.format.dao.XSLTMapperDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>		
	
	<bean id="jobCleanupDao" class="com.thomsonreuters.uscl.ereader.core.job.dao.JobCleanupDaoImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>	
	
	<bean id="userPreferenceDao" class="com.thomsonreuters.uscl.ereader.userpreference.dao.UserPreferenceDaoImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>
	
	<bean id="bundleArchiveDao" class="com.thomsonreuters.uscl.ereader.request.dao.BundleArchiveDaoImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>
		  
</beans>
	
