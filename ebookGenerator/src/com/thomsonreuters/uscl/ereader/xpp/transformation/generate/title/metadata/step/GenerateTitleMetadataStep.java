package com.thomsonreuters.uscl.ereader.xpp.transformation.generate.title.metadata.step;

import java.io.File;

import javax.annotation.Resource;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.transform.Transformer;

import com.thomsonreuters.uscl.ereader.common.filesystem.AssembleFileSystem;
import com.thomsonreuters.uscl.ereader.common.notification.step.FailureNotificationType;
import com.thomsonreuters.uscl.ereader.common.notification.step.SendFailureNotificationPolicy;
import com.thomsonreuters.uscl.ereader.common.publishingstatus.step.SavePublishingStatusPolicy;
import com.thomsonreuters.uscl.ereader.proview.TitleMetadata;
import com.thomsonreuters.uscl.ereader.xpp.transformation.step.XppTransformationStep;
import org.apache.commons.io.FileUtils;
import org.springframework.beans.factory.annotation.Value;

/**
 * Step will generate TitleMetadata object according to BookDefinition object from job execution context.
 * TitleMetadata object will be serialized as xml file.
 * title.xml file will be generated by performing xsl transformation to toc.xml file,
 * metadata for title.xml will be extracted from serialized TitleMetadata object.
 *
 * This component use jaxb to serialize object to xml file.
 */
@SendFailureNotificationPolicy(FailureNotificationType.XPP)
@SavePublishingStatusPolicy
public class GenerateTitleMetadataStep extends XppTransformationStep
{
    @Value("${xpp.toc.to.title.xsl}")
    private File tocToTitleXsl;
    @Resource(name = "assembleFileSystemTemp")
    private AssembleFileSystem assembleFileSystem;

    @Override
    public void executeTransformation() throws Exception
    {
        FileUtils.forceMkdir(fileSystem.getTitleMetadataDirectory(this));
        final Transformer transformer = transformerBuilderFactory.create().withXsl(tocToTitleXsl).build();
        transformer.setParameter("titleMetadataDoc", saveMetadataAndGetFilePath());
        transformationService.transform(transformer, fileSystem.getTocFile(this), assembleFileSystem.getTitleXml(this));
    }

    private String saveMetadataAndGetFilePath() throws JAXBException
    {
        final TitleMetadata titleMetadata = TitleMetadata.builder(getBookDefinition())
            .versionNumber(getBookVersionString())
            .artworkFile(assembleFileSystem.getArtworkFile(this))
            .assetFilesFromDirectory(assembleFileSystem.getAssetsDirectory(this))
            .build();

        final File titleBookDefinitionFile = fileSystem.getTitleMetadataFile(this);
        final Marshaller marshaller = JAXBContext.newInstance(TitleMetadata.class).createMarshaller();
        marshaller.marshal(titleMetadata, titleBookDefinitionFile);
        return titleBookDefinitionFile.getAbsolutePath().replace("\\", "/");
    }
}
