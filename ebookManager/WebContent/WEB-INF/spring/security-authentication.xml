<beans xmlns="http://www.springframework.org/schema/beans"
 	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:sec="http://www.springframework.org/schema/security"
  	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	   xsi:schemaLocation="http://www.springframework.org/schema/beans
  	   					   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						   http://www.springframework.org/schema/security
						   http://www.springframework.org/schema/security/spring-security-3.1.xsd">

  	<!-- Filter used to find a user by username in the LDAP directory tree. -->
	<bean id="ldapUserSearchFilter" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
  		<constructor-arg index="0" value=""/>
  		<constructor-arg index="1" value="(cn={0})"/>
  		<constructor-arg index="2" ref="ldapContextSource" />
	</bean>
	
	<!-- LDAP Authentication Provider, comprised of authentication operation,
		 followed by fetching user details for the authenticated user. -->  	
  	<bean id="ldapAuthenticationProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider"
  		  p:userDetailsContextMapper-ref="userDetailsContextMapper">
  		<constructor-arg>
			<!-- Perform the LDAP bind authentication by checking that the provided credentials can log in to the directory server. -->
			<bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
				<constructor-arg ref="ldapContextSource"/>
				<property name="userSearch" ref="ldapUserSearchFilter"/>
			</bean>
  		</constructor-arg>
     </bean>
	
  	<sec:authentication-manager alias="authenticationManager">
  		<sec:authentication-provider ref="ldapAuthenticationProvider"/>
  		<!-- sec:authentication-provider ref="someOtherAuthenticationProvider"/ -->
  	</sec:authentication-manager>
	
	<sec:http use-expressions="true" access-denied-page="/accessDenied.mvc">
		<!-- Authentication - form based -->
		<sec:form-login login-page="/login.mvc" 
						default-target-url="/afterAuthentication.mvc"
						always-use-default-target="true"  
						authentication-failure-url="/loginFail.mvc"/>
						
		<!-- Access Control - URL based -->
		<sec:intercept-url pattern="/js/**" access="permitAll"/>
		<sec:intercept-url pattern="/theme/**" access="permitAll"/>
		<sec:intercept-url pattern="/login.mvc" access="permitAll"/>
		<sec:intercept-url pattern="/loginFail.mvc" access="permitAll"/>
		<sec:intercept-url pattern="/accessDenied.mvc" access="permitAll"/>
		<sec:intercept-url pattern="/afterLogout.mvc" access="permitAll"/>
		<sec:intercept-url pattern="/**" access="isFullyAuthenticated()"/>
		
		<!-- Logout -->					
		<sec:logout logout-success-url="/afterLogout.mvc"/>
	</sec:http>
	
</beans>
