<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 	 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">      

	<bean id="closeableAuthenticationHttpClientFactory" class="com.thomsonreuters.uscl.ereader.deliver.rest.CloseableAuthenticationHttpClientFactory">
		<constructor-arg value="${proview.host}"/>
		<constructor-arg type="java.lang.String" value="${proview.username}"/>
		<constructor-arg type="java.lang.String" value="${proview.password}"/>
	</bean>

	<bean id="closeableAuthenticationHttpClient" factory-bean="closeableAuthenticationHttpClientFactory" factory-method="getCloseableAuthenticationHttpClient"/>

	<bean id="proviewRestTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg>
			<bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory" 
					p:bufferRequestBody="false"
					p:httpClient-ref="closeableAuthenticationHttpClient"
				/>
		</constructor-arg>
		<property name="messageConverters">
			<list>
				<bean class="com.thomsonreuters.uscl.ereader.deliver.rest.ProviewMessageConverter"/>
			</list>
		</property>
		<property name="errorHandler">
			<bean class="com.thomsonreuters.uscl.ereader.deliver.rest.ProviewHttpResponseErrorHandler"/>
		</property>
	</bean>

	<bean id="proviewRequestCallbackFactory" class="com.thomsonreuters.uscl.ereader.deliver.rest.ProviewRequestCallbackFactory"/>
	<bean id="proviewResponseExtractorFactory" class="com.thomsonreuters.uscl.ereader.deliver.rest.ProviewResponseExtractorFactory"/>	
	
	<bean id="jobNameProvider" class="com.thomsonreuters.uscl.ereader.core.job.service.JobNameProviderImpl"/>
	
	<bean id="jobRequestService" class="com.thomsonreuters.uscl.ereader.core.job.service.JobRequestServiceImpl"
		  p:jobRequestDao-ref="jobRequestDao"/>
		  
	<bean id="appConfigService" class="com.thomsonreuters.uscl.ereader.core.job.service.AppConfigServiceImpl"
		  p:appParameterDao-ref="appParameterDao"
		  p:defaultProviewHostname="${proview.host}"
		  p:defaultNovusEnvironment="${novus.environment}"/>
	
	<bean id="proviewClient" class="com.thomsonreuters.uscl.ereader.deliver.service.ProviewClientImpl"
		  p:proviewHostname="${proview.host}"
		  p:getTitlesUriTemplate="http://{proviewHost}/v1/titles/uscl/all"
		  p:getTitleInfoUriTemplate="http://{proviewHost}/v1/title/{titleId}/{eBookVersionNumber}/info"
		  p:singleTitleTemplate="http://{proviewHost}/v1/titles/{titleId}"
		  p:publishTitleUriTemplate="http://{proviewHost}/v1/title/{titleId}/{eBookVersionNumber}"
		  p:removeTitleUriTemplate="http://{proviewHost}/v1/title/{titleId}/{eBookVersionNumber}/status/removed"
		  p:promoteTitleUriTemplate="http://{proviewHost}/v1/title/{titleId}/{eBookVersionNumber}/status/final"
		  p:deleteTitleUriTemplate="http://{proviewHost}/v1/title/{titleId}/{eBookVersionNumber}"
		  p:restTemplate-ref="proviewRestTemplate"
		  p:proviewRequestCallbackFactory-ref="proviewRequestCallbackFactory"
		  p:proviewResponseExtractorFactory-ref="proviewResponseExtractorFactory"
		  p:createGroupUriTemplate="http://{proviewHost}/v1/group/{groupId}/{groupVersionNumber}"
		  p:removeGroupStatusUriTemplate="http://{proviewHost}/v1/group/{groupId}/{groupVersionNumber}/status/removed"
		  p:promoteGroupStatusUriTemplate="http://{proviewHost}/v1/group/{groupId}/{groupVersionNumber}/status/final"
		  p:getGroupUriTemplate="http://{proviewHost}/v1/group/{groupId}/{groupVersionNumber}/info"
		  p:allGroupsUriTemplate="http://{proviewHost}/v1/group/uscl"
		  p:singleGroupUriTemplate="http://{proviewHost}/v1/group/{groupId}"
		  p:deleteGroupUriTemplate="http://{proviewHost}/v1/group/{groupId}/{groupVersionNumber}"
		  p:singleTitleByVersionUriTemplate="http://{proviewHost}/v1/titles/{titleId}/{eBookVersionNumber}"
		  p:getTitlesByStatusTemplate="http://{proviewHost}/v1/titles/{titleId}?status={status}"/>
		  
	<bean id="proviewHandler" class="com.thomsonreuters.uscl.ereader.deliver.service.ProviewHandlerImpl"
		  p:proviewClient-ref="proviewClient"/>
		  
	<bean id="jmsClient" class="com.thomsonreuters.uscl.ereader.jms.client.impl.JmsClientImpl"/>
	
	<!-- If you change class of this bean, change SmokeTestService also -->
	<bean id="connectionFactory" class="com.ibm.mq.jms.MQQueueConnectionFactory"
		  p:connectionNameList="${jms.host.name}, ${jms.host.name.spare}"
		  p:port="${jms.port}"
		  p:queueManager="${jms.queue.manager}"
		  p:channel="${jms.channel}"
		  p:transportType="${jms.transport.type}"/>
	
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate"
		  p:connectionFactory-ref="connectionFactory"
		  p:defaultDestinationName="${jms.queue}" 
		  p:receiveTimeout="1000"/>
		  
	<bean id="createFrontMatterService" class="com.thomsonreuters.uscl.ereader.frontmatter.service.CreateFrontMatterServiceImpl">
	      <property name="frontMatterTitlePageTemplateLocation" value="classpath:templates/frontMatterTitleTemplate.xml"/>
		  <property name="frontMatterCopyrightPageTemplateLocation" value="classpath:templates/frontMatterCopyrightTemplate.xml"/>
		  <property name="frontMatterAdditionalPagesTemplateLocation" value="classpath:templates/frontMatterAdditionalPagesTemplate.xml"/>
		  <property name="frontMatterResearchAssistancePageTemplateLocation" value="classpath:templates/frontMatterResearchAssistanceTemplate.xml"/>
		  <property name="frontMatterWestlawNextPageTemplateLocation" value="classpath:templates/frontMatterWestlawNextTemplate.xml"/>
		  <property name="frontMatterLogoPlaceHolder">
		  	<map>
		  		<entry key="er:#EBook_Generator_TRLogo" value="EBook_Generator_TRLogo.png"/>
		  		<entry key="er:#AAJ_PRESS" value="AAJ_PRESS.png"/>
		  	</map>
		  </property>		  
	</bean>
	
	<bean id="smokeTestDao" class="com.thomsonreuters.uscl.ereader.smoketest.dao.SmokeTestDaoImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>	
	
	<bean id="smokeTestService" class="com.thomsonreuters.uscl.ereader.smoketest.service.SmokeTestServiceImpl" />
	
    <bean id="groupService" class="com.thomsonreuters.uscl.ereader.group.service.GroupServiceImpl"
			p:proviewHandler-ref="proviewHandler"/>				
			
	<bean id="bookTitlesUtil" class="com.thomsonreuters.uscl.ereader.core.book.util.BookTitlesUtilImpl"/>
	
	<bean id="versionUtil" class="com.thomsonreuters.uscl.ereader.core.book.util.VersionUtilImpl"/>	
	
	<bean id="sapService" class="com.thomsonreuters.uscl.ereader.sap.service.SapServiceImpl">
		<constructor-arg type="java.lang.String" value="${sap.api.login}"/>
		<constructor-arg type="java.lang.String" value="${sap.api.password}"/>
		<constructor-arg type="java.lang.String" value="${sap.api.get.material.url}"/>
		<constructor-arg type="java.lang.String" value="${sap.api.plant}"/>
		<constructor-arg type="java.lang.String" value="${sap.api.client}"/>
	</bean>
</beans>	
