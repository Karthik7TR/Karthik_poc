<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        				   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        				   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        				   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- Hibernate session factory definition that uses annotations in the entities 
		to map to tables/columns. -->


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=c540wfyctdbqf.int.thomsonreuters.com)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=ebook_dev.int.thomsonreuters.com)))" />
		<property name="username" value="EBOOK_USER" />
		<property name="password" value="eb00k" />
		<property name="initialSize" value="3" />
		<property name="maxActive" value="8" />
	</bean>
	
	<!--  bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=c540wfyctdbqf.int.thomsonreuters.com)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=ebook_dev.int.thomsonreuters.com)))" />
		<property name="username" value="EBOOK_USER" />
		<property name="password" value="eb00k" />
		<property name="initialSize" value="3" />
		<property name="maxActive" value="8" />
	</bean -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show.sql}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider.class}</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
			<value>com.thomsonreuters.uscl.ereader.stats.domain.PublishingStats</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.EbookAudit</value>
			<value>com.thomsonreuters.uscl.ereader.core.book.domain.BookDefinition</value>
			<value>com.thomsonreuters.uscl.ereader.core.book.domain.Author</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.DocumentTypeCode</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.EbookName</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.JurisTypeCode</value>	
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.KeywordTypeCode</value>	
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.KeywordTypeValue</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.PublisherCode</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.PubTypeCode</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.StateCode</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.FrontMatterPage</value>	
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.FrontMatterSection</value>	
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.FrontMatterPdf</value>			    	
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!-- Enable the configuration of transactional behavior based on @Transactional 
		annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	
	<bean id="publishingStatsDao" class="com.thomsonreuters.uscl.ereader.stats.dao.PublishingStatsDaoImpl">
		  <constructor-arg ref="sessionFactory"/>
	</bean>

	<bean id="publishingStatsService" class="com.thomsonreuters.uscl.ereader.stats.service.PublishingStatsServiceImpl"
			p:publishingStatsDAO-ref="publishingStatsDao"/>	

	<bean id="ebookAuditDao" class="com.thomsonreuters.uscl.ereader.core.book.dao.EBookAuditDaoImpl">
		  <constructor-arg ref="sessionFactory"/>
	</bean>

	<bean id="ebookAuditService" class="com.thomsonreuters.uscl.ereader.core.book.service.EBookAuditServiceImpl"
			p:eBookAuditDAO-ref="ebookAuditDao"/>	
  		  
  	<bean id="bookDefinitionDao" class="com.thomsonreuters.uscl.ereader.core.book.dao.BookDefinitionDaoImpl">
		<constructor-arg ref="sessionFactory"/>
	</bean>
		
  	<bean id="bookDefinitionService" class="com.thomsonreuters.uscl.ereader.core.book.service.BookDefinitionServiceImpl"
  		  p:bookDefinitionDao-ref="bookDefinitionDao"/>
  	
  	<bean id="codeDao" class="com.thomsonreuters.uscl.ereader.core.book.dao.CodeDaoImpl">
		<constructor-arg ref="sessionFactory"/>
	</bean>
  		  
  	<bean id="codeService" class="com.thomsonreuters.uscl.ereader.core.book.service.CodeServiceImpl"
  		  p:codeDao-ref="codeDao"/>
  		  
</beans>