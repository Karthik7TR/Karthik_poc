<!-- 
	Copyright 2011: Thomson Reuters Global Resources. All Rights Reserved.
	Proprietary and Confidential information of TRGR. Disclosure, Use or
	Reproduction without the written authorization of TRGR is prohibited
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 	 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
           
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=c540wfyctdbqf.int.thomsonreuters.com)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=ebook_dev.int.thomsonreuters.com)))" />
		<property name="username" value="EBOOK_USER" />
		<property name="password" value="eb00k" />
		<property name="initialSize" value="3" />
		<property name="maxActive" value="8" />
	</bean>
  	
  	 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
  		  p:dataSource-ref="dataSource"/>
  	
  	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show.sql}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider.class}</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.BookDefinition</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.job.domain.JobExecutionEntity</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.Author</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.DocumentTypeCode</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.EbookAudit</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.EbookName</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.JurisTypeCode</value>	
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.KeywordTypeCode</value>	
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.KeywordTypeValue</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.PublisherCode</value>
		    <value>com.thomsonreuters.uscl.ereader.stats.domain.PublishingStats</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.domain.PubTypeCode</value>
		    <value>com.thomsonreuters.uscl.ereader.core.book.statecode.StateCode</value>
		    <value>com.thomsonreuters.uscl.ereader.core.job.domain.JobRequest</value>	
			</list>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		  p:sessionFactory-ref="sessionFactory" />    
   
	<bean id="jobRequestService" class="com.thomsonreuters.uscl.ereader.core.job.service.JobRequestServiceImpl"
		  p:jobRequestDao-ref="jobRequestDao"/>	
	
	<bean id="jobRequestDao" class="com.thomsonreuters.uscl.ereader.core.job.dao.JobRequestDaoImpl">
		<constructor-arg ref="sessionFactory"/>
	</bean>
</beans>