<!-- 
	Copyright 2011: Thomson Reuters Global Resources. All Rights Reserved.
	Proprietary and Confidential information of TRGR. Disclosure, Use or
	Reproduction without the written authorization of TRGR is prohibited
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 	 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
           
	<!-- Pooled Datasource -->
  	<bean id="testDataSource" class="org.apache.commons.dbcp.BasicDataSource">
    	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
    	<property name="url" value="jdbc:oracle:thin:@(DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(HOST = c111cujctdbux-vip.int.westgroup.com)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = ebook_dev.int.westgroup.com)))"/>
    	<property name="username" value="EBOOK_USER"/>
    	<property name="password" value="eb00k"/>
    	<property name="initialSize" value="3"/>
    	<property name="maxActive" value="8"/>
  	</bean>
  	
  	<bean id="testSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="testDataSource"/>
		<property name="hibernateProperties">
	      <props>
	        <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
	      	<prop key="hibernate.show_sql">true</prop>
	      	<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
	      </props>
		</property>
		<property name="annotatedClasses">
		  <list>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.StateCode</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.JurisTypeCode</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.PubTypeCode</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.DocumentTypeCode</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.PublisherCode</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.KeywordTypeCode</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.KeywordTypeValue</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.EbookName</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.Author</value>
		  	<value>com.thomsonreuters.uscl.ereader.core.book.domain.BookDefinition</value>
		  </list>
		</property>
  	</bean>
	
  	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		  p:sessionFactory-ref="testSessionFactory"/>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
		  
	<bean id="codeDao" class="com.thomsonreuters.uscl.ereader.core.book.dao.CodeDaoImpl">
		<constructor-arg ref="testSessionFactory" />
	</bean>

	<bean id="codeService" class="com.thomsonreuters.uscl.ereader.core.book.service.CodeServiceImpl"
		  p:codeDao-ref="codeDao"/>
		  
	<bean id="bookDefinitionDao" class="com.thomsonreuters.uscl.ereader.core.book.dao.BookDefinitionDaoImpl">
		<constructor-arg ref="testSessionFactory" />
	</bean>

	<bean id="bookDefinitionService" class="com.thomsonreuters.uscl.ereader.core.book.service.BookDefinitionServiceImpl"
		  p:bookDefinitionDao-ref="bookDefinitionDao"/>
	
</beans>