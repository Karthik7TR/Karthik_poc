<?xml version="1.0"?>
<!DOCTYPE xml>
<project name="eBookGatherer_Test_Script" default="JUnitTestMain" basedir="..\">
  <property environment="env" />
  <property file="ant/build.properties" />
  <property file="ant/ant-global.properties" />
  <property name="test.reports.dir" value="${logs.dir}/TestsReports" />
  <property name="dir.testResults" location="${dir.tmpBuildDir}\JUnitTest" />

  <!--- - - - - - - - - - - - - - - - -
           Create the Unit test class path that will be used by all targets in the script. 
          - - - - - - - - - - - - - - - - - -->
  <path id="classpath.unitTestLibs">
    <fileset dir="${dir.tmpBuildDir}/WEB-INF/lib">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="lib">
      <include name="*.jar"/>
    </fileset>
  	<fileset dir="${env.buildextensionroot}">
      <include name="JUnit/*.jar"/>
      <include name="OtherLibraries/**/*.jar"/>
    </fileset>
  </path>

  <!-- - - - - - - - - - - - - - - - - - 
          target: -init
          description: Perform all initialization tasks like cleaning up old reports, 
                       create directories that do not exist, etc.
         - - - - - - - - - - - - - - - - - -->
  <target name="-init">
    <delete dir="${dir.testResults}" failonerror="false" includeemptydirs="true"/>
    <delete>
      <fileset dir="${dir.tmpBuildDir}">
        <include name="*.xml"/>
      </fileset>
    </delete>

    <mkdir dir="${dir.tmpBuildDir}"/>
    <mkdir dir="${dir.testResults}"/>
    <mkdir dir="${logs.dir}"/>
  </target>

  <!-- ================================= 
          target: unitTestMain
          description: This is the default entry target. Test cases will be executed and a report 
                       will be generated in the ${logs.dir} folder.
         ================================= -->
  <target name="JUnitTestMain" depends="-init">
    <!-- 
            For the developer build the consolidated unit test results should be stored under the "TestResults" Folder.
            The property ${dir.TestResultsFolder} will be set via the developerbuild.xml ANT script, and this property
            will be used to differentiate between the caller (developer build or team build) 
        -->
    <condition property="dir.TestResultsFolder" value="${dir.tmpBuildDir}">
      <not>
        <isset property="dir.TestResultsFolder"/>
      </not>
    </condition>

    <!-- The value of "haltonfailure" should be set to false or else no reports would be generated -->
    <junit fork="on" forkmode="once" haltonfailure="false" showoutput="on"
           printsummary="on" failureproperty="tests.failed">
      <jvmarg line="-XX:-UseSplitVerifier"/>
      <sysproperty key="jacoco-agent.destfile" file="${jacoco.data.file.unit}" />
      
      <classpath>
        <path refid="classpath.unitTestLibs"/>

        <pathelement location="${jacoco.instrumentedPath}" />
        <pathelement path="${dir.testBinaries}" />

        <pathelement path="${dir.unitTestSource}" />
        <pathelement path="${dir.source}" />
      	<pathelement path="${dir.resources}" />
        <pathelement path="${dir.tmpDirBinaries}"/>
        <fileset dir="${dir.core}\${dir.librariesPath}\build\jacoco\lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>

      <formatter type="xml" usefile="yes" />
      <batchtest todir="${dir.testResults}">
        <fileset dir="${dir.testBinaries}">
          <include name="**/*Test.class" />
          <exclude name="**/*Integration*.class" />
          <exclude name="**/*Regression*.class" />
        </fileset>
      </batchtest>
    </junit>

    <!--
          Generate the JUnit test report. Store the consolidated XML file in the temporary 
          folder and the generated HTML files under ${logs.dir}  
        -->
    <junitreport todir="${dir.TestResultsFolder}" tofile="${log.file}">
      <fileset dir="${dir.testResults}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${test.reports.dir}" />
    </junitreport>

    <!-- copy test results to merged location for sonar reporting -->
    <copy todir="${dir.mergedJUnitTestResults}">
      <fileset dir="${dir.testResults}" includes="TEST-*.xml" />
    </copy>

    <fail if="tests.failed">
      One or more tests failed!
      For more information check the log files created under the logs folder- '${test.reports.dir}'."
    </fail>
    
    <!-- TODO:remove when there will be ability to modify build server script to run IntegrationTestAntScript.xml directly. -->
    <echo level="info">Executing integration test cases via the IntegrationTestAntScript.xml file...</echo>
    <ant antfile="ant/IntegrationTestAntScript.xml" inheritall="false">
        <property name="dir.TestResultsFolder" value="${dir.TestResultsFolder}" />
        <property name="log.file" value="MergedTestResultsIT.xml" />
    </ant>
    <!-- /TODO -->
  </target>
</project>